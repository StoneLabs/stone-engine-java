uniform sampler2D diffuse;
#uniset diffuse material:diffuse:texture

uniform sampler2D normalMap;
#uniset normalMap material:normalMap:texture

uniform sampler2D dispMap;
#uniset dispMap material:dispMap:texture

uniform float dispMapScale;
#uniset dispMapScale material:dispMapScale:float

#include "shaders/sampling.glh"

void main()
{
	vec3 directionToEye = normalize(C_CAMERAPOS_eyepos - worldPos0);
	vec2 texCoords = CalcParallaxTexCoords(dispMap, tbnMatrix0, directionToEye, texCoord0, dispMapScale, -dispMapScale/2);
	
	vec3 normal = normalize(tbnMatrix0 * (255.0/128.0 * texture2D(normalMap, texCoords.xy).xyz - 1));
	gl_FragColor = texture2D(diffuse, texCoords.xy) * calcLightingEffect(normal, worldPos0);
}